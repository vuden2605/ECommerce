document.addEventListener("DOMContentLoaded", async () => {
  await fetchCart();
  setupEventListeners();
});

const fetchCart = async () => {
  try {
      const res = await fetch('http://localhost:3000/cart', {
          headers: {
              'Authorization': 'Bearer ' + localStorage.getItem('token')
          }
      });
      
      const cart = await res.json();
      console.log(cart);
      
      const cartItemsDiv = document.getElementById("cart-items");
      const totalPriceSpan = document.getElementById("total-price");
      
      // N·∫øu kh√¥ng c√≥ cart-items (t·ª©c kh√¥ng ph·∫£i cart.html), ch·ªâ tr·∫£ k·∫øt qu·∫£ v·ªÅ
      if (!cartItemsDiv || !totalPriceSpan) {
          return cart;
      }
      
      // Reset n·ªôi dung c≈©
      cartItemsDiv.innerHTML = '';
      let total = 0;
      
      cart.forEach(item => {
          const itemHTML = `
              <div class="col-md-4 mb-3">
                  <div class="card">
                      <div class="card-body">
                          <h5 class="card-title">${item.name}</h5>
                          <p class="card-text">S·ªë l∆∞·ª£ng: ${item.quantity}</p>
                          <p class="card-text text-primary">${item.price} VNƒê</p>
                          <div class="d-flex align-items-center mb-2">
                              <button class="btn btn-sm btn-outline-secondary me-2 quantity-decrease" data-id="${item.id}">‚àí</button>
                              <span class="quantity-value" data-id="${item.id}">${item.quantity}</span>
                              <button class="btn btn-sm btn-outline-secondary ms-2 quantity-increase" data-id="${item.id}">+</button>
                          </div>
                          <button class="btn btn-sm btn-danger delete-item" data-id="${item.id}">üóë X√≥a</button>
                      </div>
                  </div>
              </div>
          `;
          cartItemsDiv.innerHTML += itemHTML;
          total += item.price * item.quantity;
      });
      
      totalPriceSpan.textContent = total.toLocaleString("vi-VN") + " VNƒê";
      
      return cart;
      
  } catch (err) {
      console.error("L·ªói khi l·∫•y gi·ªè h√†ng:", err);
      alert("Kh√¥ng th·ªÉ t·∫£i gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
      return [];
  }
};

// H√†m setup event listeners s·ª≠ d·ª•ng event delegation
const setupEventListeners = () => {
  const cartItemsDiv = document.getElementById("cart-items");
  
  if (!cartItemsDiv) return;
  
  // S·ª≠ d·ª•ng event delegation - g·∫Øn listener v√†o container ch·ª©a c√°c n√∫t
  cartItemsDiv.addEventListener("click", async (e) => {
      const target = e.target;
      
      // X·ª≠ l√Ω n√∫t x√≥a
      if (target.classList.contains("delete-item")) {
          const id = target.dataset.id;
          try {
              await fetch(`http://localhost:3000/cart/${id}`, {
                  method: "DELETE",
                  headers: {
                      "Authorization": "Bearer " + localStorage.getItem("token")
                  }
              });
              await fetchCart();
          } catch (err) {
              console.error("L·ªói khi x√≥a s·∫£n ph·∫©m:", err);
              alert("Kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m. Vui l√≤ng th·ª≠ l·∫°i.");
          }
      }
      
      // X·ª≠ l√Ω n√∫t tƒÉng s·ªë l∆∞·ª£ng
      if (target.classList.contains("quantity-increase")) {
          const id = target.dataset.id;
          try {
              await fetch(`http://localhost:3000/cart/${id}/increase`, {
                  method: "PATCH",
                  headers: {
                      "Authorization": "Bearer " + localStorage.getItem("token")
                  }
              });
              await fetchCart();
          } catch (err) {
              console.error("L·ªói khi tƒÉng s·ªë l∆∞·ª£ng:", err);
              alert("Kh√¥ng th·ªÉ tƒÉng s·ªë l∆∞·ª£ng. Vui l√≤ng th·ª≠ l·∫°i.");
          }
      }
      
      // X·ª≠ l√Ω n√∫t gi·∫£m s·ªë l∆∞·ª£ng
      if (target.classList.contains("quantity-decrease")) {
          const id = target.dataset.id;
          try {
              await fetch(`http://localhost:3000/cart/${id}/decrease`, {
                  method: "PATCH",
                  headers: {
                      "Authorization": "Bearer " + localStorage.getItem("token")
                  }
              });
              await fetchCart();
          } catch (err) {
              console.error("L·ªói khi gi·∫£m s·ªë l∆∞·ª£ng:", err);
              alert("Kh√¥ng th·ªÉ gi·∫£m s·ªë l∆∞·ª£ng. Vui l√≤ng th·ª≠ l·∫°i.");
          }
      }
  });
};